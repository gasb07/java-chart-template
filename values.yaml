#Número de replicas da aplicação
replicaCount: 1

#Configurações de imagem
image:
  repository: ""
  tag: ""
  pullPolicy: Always #Sempre tentar baixar a imagem
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

containerPort: ""

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:*
  #      - chart-example.local
envConfigMap:
  create: true
  envFile: {}
externalSecrets:
  enable: true
  secretStore:
    providerUrl: "http://vault.hashicorp-vault.svc.cluster.local:8200"
    path: "kv"
    version: "v2"
    vault:
      authPath: "kubernetes"
  externalSecret:
    refreshInterval: 30s
    dataFrom:
      - db-credentials
      - tokens
    secretKeys: {}
  #Tipo de implementação do Secret. Valores possíveis: EnvVar, Volume
  secretType: ""
  # Se a aplicação ainda está buscando os secrets em /run/secrets, colocar valor como true
  dockerSecretCompat: false

#No caso de uso de secrets já criados, colocar aqui
secrets:
  secretType: ""
  secretName: ""
  mountPath: ""
  subPath: ""
nodeSelector: {}

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  tcpSocket:
    port: ""
  initialDelaySeconds: 60
  periodSeconds: 15
readinessProbe:
  tcpSocket:
    port: ""
  initialDelaySeconds: 60
  periodSeconds: 15

# Volumes adicionais
volumes: []

# Volume mounts adicionais
volumeMounts: []

nodeSelector: {}

tolerations:
  - effect: NoSchedule
    key: node/reserved-for
    operator: Equal
    value: ""

affinity: {}
